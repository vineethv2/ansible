
####################################################################################################################################################################
####################################################################################################################################################################
PROJ-1
####################################################################################################################################################################
####################################################################################################################################################################


	[student@workstation projects-host]$ ls
		ansible.cfg 
		inventory1 
		inventory2 
		playbook.yml

	###########################################################################

	[student@workstation projects-host]$ cat inventory1 
		
			srv1.example.com
			srv2.example.com
			s1.lab.example.com
			s2.lab.example.com

			[web]
			jupiter.lab.example.com
			saturn.example.com

			[db]
			db1.example.com
			db2.example.com
			db3.example.com

			[lb]
			lb1.lab.example.com
			lb2.lab.example.com

			[boston]
			db1.example.com
			jupiter.lab.example.com
			lb2.lab.example.com

			[london]
			db2.example.com
			db3.example.com
			file1.lab.example.com
			lb1.lab.example.com

			[dev]
			web1.lab.example.com
			db3.example.com

			[stage]
			file2.example.com
			db2.example.com

			[prod]
			lb2.lab.example.com
			db1.example.com
			jupiter.lab.example.com

			[function:children]
			web
			db
			lb
			city

			[city:children]
			boston
			london
			environments

			[environments:children]
			dev
			stage
			prod
			new

			[new]
			172.25.252.23
			172.25.252.44
			172.25.252.32
	###########################################################################
	[student@workstation projects-host]$ cat inventory1 

			workstation.lab.example.com

			[london]
			servera.lab.example.com

			[berlin]
			serverb.lab.example.com

			[tokyo]
			serverc.lab.example.com

			[atlanta]
			serverd.lab.example.com

			[europe:children]
			london
			berlin

	###########################################################################
	[student@workstation projects-host]$ vim playbook.yml

			---
			- name: Resolve host patterns
			hosts:				london		europe	ungrouped
			tasks:
				- name: Display managed host name
				  debug:
					msg: "{{ inventory_hostname }}"


	###########################################################################


	[student@workstation projects-host]$ ansible 	db1.example.com 						-i inventory1  		--list-hosts

	[student@workstation projects-host]$ ansible 	172.25.252.44 							-i inventory1 		--list-hosts
		
	[student@workstation projects-host]$ ansible 	all 								-i inventory1 		--list-hosts

	[student@workstation projects-host]$ ansible 	'*.example.com' 						-i inventory1 		--list-hosts

	[student@workstation projects-host]$ ansible 	'*.example.com, !*.lab.example.com' 				-i inventory1 		--list-hosts

	[student@workstation projects-host]$ ansible 	lb1.lab.example.com,s1.lab.example.com,db1.example.com 		-i inventory1  		--list-hosts

	[student@workstation projects-host]$ ansible 	'172.25.*' 							-i inventory1 		--list-hosts
	[student@workstation projects-host]$ ansible 	's*' 								-i inventory1 		--list-hosts


	[student@workstation projects-host]$ ansible 	'prod,172*,*lab*' 						-i inventory1		--list-hosts
	[student@workstation projects-host]$ ansible 	'db,&london' 							-i inventory1 		--list-hosts
	

	###########################################################################
			hosts:			london		europe		ungrouped	'*'	all	192.168.2.1	'!test1.example.com,development' 	'*.example.com'		'192.168.2.*'	'datacenter*'		'data*'		labhost1.example.com,test2.example.com,192.168.2.2	lab,datacenter1		lab,data*,192.168.2.2		lab,&datacenter1	datacenter,!test2.example.com		all,!datacenter1				

	###########################################################################
	[student@workstation projects-host]$ ansible-playbook 			playbook.yml	

	[student@workstation projects-host]$ ansible-playbook -i inventory2	playbook.yml


	###########################################################################

	[student@workstation projects-host]$vim	host_vars/dummy.example 

		ansible_host: 192.168.2.1
	###########################################################################
	###########################################################################
	###########################################################################



####################################################################################################################################################################
####################################################################################################################################################################

####################################################################################################################################################################
####################################################################################################################################################################

	[student@workstation projects-host]$ ansible-inventory 		-i inventory 		â€“list
	
	[student@workstation ~]$ ./inventoryscript --list

	[student@workstation ~]$ ./inventoryscript 		--host server5.demo.example.com







####################################################################################################################################################################
####################################################################################################################################################################
PROJ-2
####################################################################################################################################################################
####################################################################################################################################################################







	[student@workstation projects-inventory]$ 

		[defaults]
		inventory = inventory

	###########################################################################

	[student@workstation projects-inventory]$ mkdir inventory

	###########################################################################

	[student@workstation projects-inventory]$ wget  http://materials.example.com/labs/projects-inventory/inventorya.py  -O inventory/inventorya.py

	[student@workstation projects-inventory]$ wget  http://materials.example.com/labs/projects-inventory/inventoryw.py  -O inventory/inventoryw.py

	[student@workstation projects-inventory]$ wget  http://materials.example.com/labs/projects-inventory/hosts 	    -O inventory/hosts


	Cat the files

	###########################################################################

	[student@workstation projects-inventory]$ ansible 	-i inventory/inventorya.py webservers 		--list-hosts		--> Error


		nO EXEC RIGHTS

		###########################################################################

		[student@workstation projects-inventory]$ ls 		-la 	inventory/inventorya.py

		[student@workstation projects-inventory]$ chmod 755 		inventory/inventorya.py
		[student@workstation projects-inventory]$ chmod 755 		inventory/inventoryw.py

		###########################################################################

		[student@workstation projects-inventory]$ inventory/inventorya.py --list
		[student@workstation projects-inventory]$ inventory/inventoryw.py --list

		


	###########################################################################

	[student@workstation projects-inventory]$ ansible 	webservers 	--list-hosts			--> Error


	###########################################################################

		[student@workstation projects-inventory]$ cat inventory/hosts
			[servers:children]
			webservers
			-----------------------------
			[webservers]					--> Now add the line
			[servers:children]
			Webservers

	###########################################################################

	[student@workstation projects-inventory]$ ansible 	webservers 	--list-hosts
	

	###########################################################################





	###########################################################################






####################################################################################################################################################################
####################################################################################################################################################################

####################################################################################################################################################################
####################################################################################################################################################################

	[student@workstation project3]$ vim ansible.cfg 

				[defaults]
				inventory=inventory
				remote_user=devops
				forks=4
				...output omitted...
	################

	[student@workstation project3]$grep forks ansible.cfg

	[student@workstation project3]$ansible-config dump | grep -i forks

	[student@workstation project3]$ansible-config list | grep -i forks

	###########################################################################

	[student@workstation project3]$ vim inventory 

			[webservers]
			servera.lab.example.com
			serverb.lab.example.com
			serverc.lab.example.com
			serverd.lab.example.com

	###########################################################################


	[student@workstation project3]$ vim inventory 


			---
			- name: Update web server
			  hosts: webservers
			  #serial: 2
			  tasks:
				- name: Lastest httpd package installed
				  yum:
					name: httpd
					state: latest
				  notify:
					- Restart httpd
			  handlers:
				- name: Restart httpd
				  service:
					name: httpd
					enabled: yes
					state: restarted

	###########################################################################


	[student@workstation project3]$ vim remove_apache.yml 

			---
			- hosts: webservers
			tasks:
				- service:
				  	name: httpd
				  	enabled: no
				  	state: stopped
				- yum:
				  	name: httpd
				  	state: absent


	###########################################################################
	To test-1:



		1. verify	 forks=4

		2. [student@workstation projects-parallelism]$ time ansible-playbook playbook.yml

		3. [student@workstation projects-parallelism]$ ansible-playbook	remove_apache.yml



	###########################################################################
	To test-2:

		1. In config change the forks=1	

		2. [student@workstation projects-parallelism]$ time ansible-playbook playbook.yml

		3. [student@workstation projects-parallelism]$ ansible-playbook	remove_apache.yml


	###########################################################################
	To test-3:

		1. In config change the forks=2
		   In playbook  serial:2		 

		2. [student@workstation projects-parallelism]$ time ansible-playbook playbook.yml

		3. [student@workstation projects-parallelism]$ ansible-playbook	remove_apache.yml

		4. [student@workstation projects-parallelism]$ ansible-playbook playbook.yml

			Now first 2 task will be run	on servera and serverb
			Then 				   serverc and serverd

		5. [student@workstation projects-parallelism]$ ansible-playbook remove_apache.yml


	###########################################################################
	
	To test-4:

		1. In config change the forks=4
		   In playbook  serial:3		 

		2. [student@workstation projects-parallelism]$ time ansible-playbook playbook.yml

		3. [student@workstation projects-parallelism]$ ansible-playbook	remove_apache.yml

		4. [student@workstation projects-parallelism]$ ansible-playbook playbook.yml

			Now first 2 task will be run	on servera, serverb, serverc
			Then 				   serverd

		5. [student@workstation projects-parallelism]$ ansible-playbook remove_apache.yml

	###########################################################################
	
	To test-5:

		1. In config change the forks=4
		   In playbook  serial:3		 

		2. [student@workstation projects-parallelism]$ time ansible-playbook playbook.yml

		3. [student@workstation projects-parallelism]$ ansible-playbook	remove_apache.yml

		4. [student@workstation projects-parallelism]$ ansible-playbook playbook.yml	-f  	4
		   [student@workstation projects-parallelism]$ ansible-playbook playbook.yml	--forks 4

			Now first 2 task will be run	on servera, serverb, serverc
			Then 				   serverd

		5. [student@workstation projects-parallelism]$ ansible-playbook remove_apache.yml

####################################################################################################################################################################
####################################################################################################################################################################

####################################################################################################################################################################
####################################################################################################################################################################





	###########################################################################
	[student@workstation projects-file]$ cat tasks/environment.yml

		---
		- name: Install the {{ package }} package
		  yum:
			name: "{{ package }}"
			state: latest
		- name: Start the {{ service }} service
			service:
			name: "{{ service }}"
			enabled: true
			state: started


	###########################################################################
	[student@workstation projects-file]$ cat tasks/firewall.yml

		---
		- name: Install the firewall
		  yum:
			name: "{{ firewall_pkg }}"
			state: latest

		- name: Start the firewall
		  service:
			name: "{{ firewall_svc }}"
			enabled: true
			state: started

		- name: Open the port for {{ rule }}
		  firewalld:
			service: "{{ item }}"
			immediate: true
			permanent: true
			state: enabled
		  loop: "{{ rule }}"


	###########################################################################
	[student@workstation projects-file]$ cat tasks/placeholder.yml

		---
		- name: Create placeholder file
		  copy:
			content: "{{ ansible_facts['fqdn'] }} has been customized using	Ansible.\n"
			dest: "{{ file }}"


	###########################################################################
	[student@workstation projects-file]$ cat plays/test.yml

		---
		- name: Test web service
		  hosts: localhost
		  become: no
		  tasks:
			- name: connect to internet web server
			  uri:
			  	url: "{{ url }}"
				status_code: 200


	###########################################################################
	[student@workstation projects-file]$ vim playbook.yml 

		---
		- name: Configure web server
		  hosts: servera.lab.example.com
		  tasks:

			- name: Include the environment task file and set the variables
			  include_tasks: tasks/environment.yml
			  vars:
				package: httpd
				service: httpd
			  when: ansible_facts['os_family'] == 'RedHat'



			- name: Import the firewall task file and set the variables
			  import_tasks: tasks/firewall.yml
			  vars:
				firewall_pkg: firewalld
				firewall_svc: firewalld
			  	rule:
					- http
					- https

			- name: Import the placeholder task file and set the variable
			  import_tasks: tasks/placeholder.yml
			  vars:
				file: /var/www/html/index.html



			- name: Import test play file and set the variable
			  import_playbook: plays/test.yml
			  vars:
				url: 'http://servera.lab.example.com'


	###########################################################################
	[student@workstation projects-file]$ ansible-playbook playbook.yml --syntaxcheck 

	###########################################################################


	[student@workstation projects-file]$ ansible-playbook playbook.yml 









####################################################################################################################################################################
####################################################################################################################################################################

####################################################################################################################################################################
####################################################################################################################################################################


